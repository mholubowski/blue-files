
<span class="label label-important">
  <i class="icon-edit"></i> <%= link_to "Admin Edit", edit_document_path(@document) if admin? %>
</span>

<table>
  <h1 style="color:pink;">Views: <%= @document.views %></h1>
	<tr>
		<td><%= @document.category %></td>
		<td><%= @document.sub_category %></td>
		<td><%= @document.sub_sub_category %></td>
		<td><%= @document.title %></td>
	</tr>
</table>

<div style="text-align:center;">

    <span class="page-count">Page: <span id="page_num"></span> / <span id="page_count"></span></span>
  </div>

  <div class="row" style="display:table;position: relative; overflow: hidden;">

  	<div id="prev_column" class="span1" onclick="goPrevious()">
  		
	<span class="raquos-container">  		
		<span class="raquos">&laquo;</span>
  		<br><br><br><br>
  		<span class="raquos">&laquo;</span>
  		<br><br><br><br>
  		<span class="raquos">&laquo;</span>
  	</span>

  	</div>
  
  	<div class="span10">  <canvas id="the-canvas" style="border:1px solid black"></canvas></div>
  	<div id="next_column"class="span1" onclick="goNext()">
<span class="raquos-container">  		
		<span class="raquos">&raquo;</span>
  		<br><br><br><br>
  		<span class="raquos">&raquo;</span>
  		<br><br><br><br>
  		<span class="raquos">&raquo;</span>
  	</span>
  	</div>

  </div>
  <div>
  </div>

  <%= render 'documents/comment_area' %>
  
  
  <!-- Use latest PDF.js build from Github -->
  <script type="text/javascript" src="https://raw.github.com/mozilla/pdf.js/gh-pages/build/pdf.js"></script>
  
  <script type="text/javascript">
    // TODO: MOVE THIS SHIT!!!
    //
    // NOTE: 
    // Modifying the URL below to another server will likely *NOT* work. Because of browser
    // security restrictions, we have to use a file server with special headers
    // (CORS) - most servers don't support cross-origin browser requests.
    //
    var url = "<%= @document.document_file_url %>";

    //
    // Disable workers to avoid yet another cross-origin issue (workers need the URL of
    // the script to be loaded, and currently do not allow cross-origin scripts)
    //
    PDFJS.disableWorker = true;

    var pdfDoc = null,
        pageNum = 1,
        scale = 1.5,
        canvas = document.getElementById('the-canvas'),
        ctx = canvas.getContext('2d');

    //
    // Get page info from document, resize canvas accordingly, and render page
    //
    function renderPage(num) {
      // Using promise to fetch the page
      pdfDoc.getPage(num).then(function(page) {
        var viewport = page.getViewport(scale);
        canvas.height = viewport.height;
        canvas.width = viewport.width;

        // Render PDF page into canvas context
        var renderContext = {
          canvasContext: ctx,
          viewport: viewport
        };
        page.render(renderContext);
      });

      // Update page counters
      document.getElementById('page_num').textContent = pageNum;
      document.getElementById('page_count').textContent = pdfDoc.numPages;
    }

    //
    // Go to previous page
    //
    function goPrevious() {
      if (pageNum <= 1)
        return;
      pageNum--;
      renderPage(pageNum);
    }

    //
    // Go to next page
    //
    function goNext() {
      if (pageNum >= pdfDoc.numPages)
        return;
      pageNum++;
      renderPage(pageNum);
    }

    //
    // Asynchronously download PDF as an ArrayBuffer
    //
    PDFJS.getDocument(url).then(function getPdfHelloWorld(_pdfDoc) {
      pdfDoc = _pdfDoc;
      renderPage(pageNum);
    });

    

    $(document).keydown(function(e){
    if (e.keyCode == 37) { 
       goPrevious();
       $("#prev_column").addClass("active").delay(100).queue(function(next){
   	 		$(this).removeClass("active");
    		next();
		});
    }
    else if (e.keyCode == 39){
    	goNext();
    	$("#next_column").addClass("active").delay(100).queue(function(next){
   	 		$(this).removeClass("active");
    		next();
		});
     }
     else {
     	return false;
     }
	});

	// screenshot

		var keysPressed  = []
	var combo = [93,16] 
$(document).keydown(function(e){
	switch(e.which){
		case 91 || 93:
			keysPressed.push(93);
			break;
		case 93:
			keysPressed.push(93);
			break;
		case 16:
			keysPressed.push(16);
			break;
		default:
			keysPressed = [];
			break;
	}
	console.log(keysPressed);
	if ($(keysPressed).not(combo).length == 0 && $(combo).not(keysPressed).length == 0) {
		console.log('hide!');
		$('#the-canvas').addClass("censor");
	}
});

$(document).keyup(function(e){
	switch(e.which){
	case 91:
			keysPressed = [];
			break;
		case 93:
			keysPressed = [];
			break;
		case 16:
			keysPressed = [];
			break;
		default:
			break;
	}
	console.log(keysPressed);
});



	// screenshot end

</script>


